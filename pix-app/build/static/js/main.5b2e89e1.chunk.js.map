{"version":3,"sources":["components/NavItem.tsx","components/Die.tsx","hooks/useHover.ts","reduxStore/hooks.ts","pages/Tenzies.tsx","slices/user/userSlice.ts","pages/User.tsx","slices/dogs/dogsApiSlice.ts","pages/Dogs.tsx","App.tsx","reportWebVitals.ts","reduxStore/store.ts","index.tsx"],"names":["NavItem","props","Box","sx","py","px","bgcolor","selected","blueGrey","color","cursor","onClick","Typography","label","Die","backgroundColor","isHeld","green","useState","hovered","setHovered","ref","useRef","enter","leave","useEffect","node","current","addEventListener","removeEventListener","useHover","holdDice","bind","key","height","width","p","borderRadius","display","justifyContent","alignItems","boxShadow","variant","value","useAppSelector","useSelector","Tenzies","user","state","React","allNewDice","dice","setDice","tenzies","setTenzies","generateNewDie","Math","ceil","random","id","nanoid","newDice","i","push","allHeld","every","die","firstValue","allSameValue","diceElements","map","oldDice","maxWidth","flexDirection","className","name","winSlogan","gridTemplate","gap","mb","Button","disableElevation","nameSlice","createSlice","initialState","age","created","reducers","setUser","action","payload","actions","UserPage","userState","dispatch","useDispatch","handleChange","event","data","target","grey","m","Stack","component","spacing","noValidate","autoComplete","TextField","onChange","Number","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","set","endpoints","builder","fetchBreeds","query","limit","useFetchBreedsQuery","Dogs","numDogs","setNumDogs","isFetching","InputLabel","Select","labelId","e","MenuItem","length","breed","Card","CardMedia","image","url","alt","CardContent","gutterBottom","temperament","CardActions","size","App","navItems","href","nav","setNav","mr","overflow","zIndex","item","to","style","textDecoration","minHeight","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","userSliceReducer","middleware","getDefaultMiddleware","concat","darkTheme","createTheme","palette","mode","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.5b2e89e1.chunk.js","sourcesContent":["import { Box, Typography } from \"@mui/material\";\nimport { blueGrey } from \"@mui/material/colors\";\n\ninterface NavItemProps {\n  key: string;\n  label: string;\n  onClick: () => void;\n  selected: boolean;\n}\n\nexport default function NavItem(props: NavItemProps) {\n  return (\n    <Box\n      sx={{\n        py: 1,\n        px: 4,\n        bgcolor: props.selected ? blueGrey[500] : \"transparent\",\n        color: props.selected ? \"white\" : blueGrey[900],\n        cursor: \"pointer\",\n        \"&:hover\": {\n          bgcolor: !props.selected ? blueGrey[100] : blueGrey[500],\n        },\n      }}\n      onClick={props.onClick}\n    >\n      <Typography>{props.label}</Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport useHover from \"../hooks/useHover\";\nimport { green } from \"@mui/material/colors\";\n\ninterface DieProps {\n  key: string;\n  value: number;\n  isHeld: boolean;\n  holdDice: (id: string) => void;\n}\n\nexport default function Die(props: DieProps) {\n  const backgroundColor = props.isHeld ? green[400] : \"white\";\n  const { hovered, ref } = useHover<HTMLDivElement>();\n\n  return (\n    <div onClick={props.holdDice.bind(null, props.key)} ref={ref}>\n      <Box\n        sx={{\n          bgcolor: backgroundColor,\n          height: 50,\n          width: 50,\n          p: 1,\n          borderRadius: 1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          boxShadow:\n            hovered || props.isHeld ? \"1px 2px 5px rgba(0,0,0,0.8)\" : \"none\",\n        }}\n      >\n        <Typography variant=\"h3\">{props.value}</Typography>\n      </Box>\n    </div>\n  );\n}\n","import { useState, useEffect, useRef } from \"react\";\n\nexport default function useHover<T extends HTMLElement>() {\n  const [hovered, setHovered] = useState(false);\n  const ref = useRef<T>(null);\n\n  function enter() {\n    setHovered(true);\n  }\n\n  function leave() {\n    setHovered(false);\n  }\n\n  useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(\"mouseenter\", enter);\n      node.addEventListener(\"mouseleave\", leave);\n\n      return () => {\n        if (node) {\n          node.removeEventListener(\"mouseenter\", enter);\n          node.removeEventListener(\"mouseleave\", leave);\n        }\n      };\n    }\n  }, []);\n\n  return { hovered, ref };\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { RootState, AppDispatch } from \"./store\";\nexport const useAppDispatch = (): AppDispatch => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport Die from \"../components/Die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\nimport { blueGrey } from \"@mui/material/colors\";\nimport { Button, Box, Typography } from \"@mui/material\";\n\nimport { useAppSelector } from \"../reduxStore/hooks\";\n\ninterface Dice {\n  id: string;\n  value: number;\n  isHeld: boolean;\n}\n\nexport default function Tenzies() {\n  const user = useAppSelector((state) => state.user.user);\n\n  const [dice, setDice] = React.useState<Dice[]>(allNewDice());\n  const [tenzies, setTenzies] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const allHeld = dice.every((die) => die.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every((die) => die.value === firstValue);\n    if (allHeld && allSameValue) {\n      setTenzies(true);\n    }\n  }, [dice]);\n\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid(),\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n    return newDice;\n  }\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice((oldDice) =>\n        oldDice.map((die) => {\n          return die.isHeld ? die : generateNewDie();\n        })\n      );\n    } else {\n      setTenzies(false);\n      setDice(allNewDice());\n    }\n  }\n\n  function holdDice(id: string) {\n    setDice((oldDice) =>\n      oldDice.map((die) => {\n        return die.id === id ? { ...die, isHeld: !die.isHeld } : die;\n      })\n    );\n  }\n\n  const diceElements = dice.map((die) => (\n    <Die\n      key={die.id}\n      value={die.value}\n      isHeld={die.isHeld}\n      holdDice={() => holdDice(die.id)}\n    />\n  ));\n\n  return (\n    <Box\n      sx={{\n        bgcolor: blueGrey[500],\n        height: \"400px\",\n        maxWidth: \"800px\",\n        borderRadius: 5,\n        p: 3,\n        color: \"white\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n      }}\n    >\n      {tenzies && <Confetti />}\n      <h1 className=\"title\">{user.name}'s Game of Tenzies</h1>\n      {tenzies ? (\n        <Typography variant=\"h2\">{user.winSlogan}</Typography>\n      ) : (\n        <p className=\"instructions\">\n          Hello {user.name} Roll until all dice are the same. Click each die to\n          freeze it at its current value between rolls.\n        </p>\n      )}\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplate: \"auto auto/ repeat(5, 1fr)\",\n          gap: \"1rem\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          mb: 1,\n          color: blueGrey[800],\n        }}\n      >\n        {diceElements}\n      </Box>\n      <Button variant=\"contained\" disableElevation onClick={rollDice}>\n        {tenzies ? \"New Game\" : \"Roll\"}\n      </Button>\n    </Box>\n  );\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { User } from \"./user.model\";\n\nconst initialState: User = {\n  user: {\n    name: \"\",\n    age: null,\n    winSlogan: \"\",\n    created: false,\n  },\n};\n\nconst nameSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setUser: (state, action: PayloadAction<User>) => {\n      state.user = action.payload.user;\n    },\n  },\n});\n\nexport const { setUser } = nameSlice.actions;\nexport default nameSlice.reducer;\n","import { Stack, TextField, Typography, Button, Box } from \"@mui/material/\";\nimport { grey } from \"@mui/material/colors\";\nimport { useAppDispatch, useAppSelector } from \"../reduxStore/hooks\";\nimport { setUser } from \"../slices/user/userSlice\";\nimport { User } from \"../slices/user/user.model\";\n\nexport default function UserPage() {\n  const userState = useAppSelector((state) => state.user.user);\n  const dispatch = useAppDispatch();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const data: User = {\n      user: { ...userState, [event.target.name]: event.target.value },\n    };\n    dispatch(setUser(data));\n  }\n\n  function handleSubmit() {\n    const data: User = {\n      user: { ...userState, created: true },\n    };\n    dispatch(setUser(data));\n  }\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          bgcolor: grey[200],\n          borderRadius: 2,\n          p: 10,\n        }}\n      >\n        <Typography variant=\"h4\">Sign Up</Typography>\n\n        <Box sx={{ m: 3 }}>Sign up to play Tenzies and see some dogs.</Box>\n        <Stack component=\"form\" spacing={2} noValidate autoComplete=\"off\">\n          <TextField\n            onChange={handleChange}\n            name=\"name\"\n            value={userState.name}\n            id=\"0\"\n            label=\"Player Name\"\n            variant=\"filled\"\n          />\n          <TextField\n            onChange={handleChange}\n            name=\"winSlogan\"\n            value={userState.winSlogan}\n            id=\"1\"\n            variant=\"outlined\"\n            label=\"Winning Slogan\"\n          />\n          <TextField\n            onChange={handleChange}\n            name=\"age\"\n            value={Number(userState.age)}\n            id=\"2\"\n            variant=\"outlined\"\n            label=\"Age\"\n          />\n\n          <Button variant=\"contained\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Stack>\n      </Box>\n    </Box>\n  );\n}\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst DOGS_API_KEY = \"95869064-a1f8-4ec6-b8ad-dacb2841a210\";\n\ninterface Breed {\n  id: string;\n  name: string;\n  image: {\n    url: string;\n  };\n  temperament: string;\n}\n\nexport const apiSlice = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://api.thedogapi.com/v1\",\n    prepareHeaders(headers) {\n      headers.set(\"x-api-key\", DOGS_API_KEY);\n      return headers;\n    },\n  }),\n  endpoints(builder) {\n    return {\n      fetchBreeds: builder.query<Breed[], number | void>({\n        query(limit = 10) {\n          return `/breeds?limit=${limit}`;\n        },\n      }),\n    };\n  },\n});\n\nexport const { useFetchBreedsQuery } = apiSlice;\n","import { useFetchBreedsQuery } from \"../slices/dogs/dogsApiSlice\";\nimport {\n  Card,\n  Box,\n  CardContent,\n  CardMedia,\n  Typography,\n  CardActions,\n  Button,\n  Select,\n  InputLabel,\n  MenuItem,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAppSelector } from \"../reduxStore/hooks\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nexport default function Dogs() {\n  const user = useAppSelector((state) => state.user.user);\n  const [numDogs, setNumDogs] = useState(user.age);\n  const { data = [], isFetching } = useFetchBreedsQuery(\n    numDogs === null ? 1 : numDogs\n  );\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Box>\n          <InputLabel id=\"dog-select\">Dogs to fetch</InputLabel>\n          <p>We will select your age: {user.age} number of dogs initially</p>\n          <Select\n            labelId=\"dog-select\"\n            value={numDogs}\n            onChange={(e) => setNumDogs(Number(e.target.value))}\n          >\n            <MenuItem value=\"5\">5</MenuItem>\n            <MenuItem value=\"10\">10</MenuItem>\n            <MenuItem value=\"15\">15</MenuItem>\n            <MenuItem value=\"150\">150</MenuItem>\n          </Select>\n        </Box>\n\n        <Box>\n          {isFetching ? (\n            <Typography variant=\"h3\">LOADING DOGS</Typography>\n          ) : (\n            <Box>\n              <Typography variant=\"h4\">\n                {\" \"}\n                Number of dogs fetched: {data.length}\n              </Typography>\n              <Box>\n                {data.map((breed) => (\n                  <div key={nanoid()}>\n                    <Card sx={{ maxWidth: 375, m: 2 }}>\n                      <CardMedia\n                        component=\"img\"\n                        image={breed.image.url}\n                        alt={breed.name}\n                      />\n                      <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                          {breed.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {breed.temperament}\n                        </Typography>\n                      </CardContent>\n                      <CardActions>\n                        <Button size=\"small\">Share</Button>\n                        <Button size=\"small\">Learn More</Button>\n                      </CardActions>\n                    </Card>\n                  </div>\n                ))}\n              </Box>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import Box from \"@mui/material/Box\";\nimport { Container, Typography } from \"@mui/material\";\nimport { blueGrey } from \"@mui/material/colors\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport NavItem from \"./components/NavItem\";\nimport Tenzies from \"./pages/Tenzies\";\nimport User from \"./pages/User\";\nimport Dogs from \"./pages/Dogs\";\n\nimport { useState } from \"react\";\n\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport { useAppSelector } from \"./reduxStore/hooks\";\n\ninterface NavTypes {\n  id: string;\n  label: string;\n  href: string;\n  selected: boolean;\n}\n\nfunction App() {\n  const navItems: NavTypes[] = [\n    {\n      id: nanoid(),\n      label: \"User\",\n      href: \"/\",\n      selected: false,\n    },\n    {\n      id: nanoid(),\n      label: \"Tenzies\",\n      href: \"/tenzies\",\n      selected: false,\n    },\n    {\n      id: nanoid(),\n      label: \"Dogs\",\n      href: \"/dogs\",\n      selected: false,\n    },\n  ];\n\n  const [nav, setNav] = useState<NavTypes[]>(navItems);\n  const user = useAppSelector((state) => state.user);\n  const handleNavClick = (id: string) => {\n    setNav(\n      nav.map((item) => {\n        return { ...item, selected: item.id === id ? true : false };\n      })\n    );\n  };\n\n  return (\n    <Router>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          bgcolor: blueGrey[200],\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          sx={{ color: blueGrey[800], p: 2, mr: \"auto\" }}\n        >\n          Pixton Project\n        </Typography>\n        <Box\n          sx={{\n            maxWidth: 600,\n            m: 1,\n            bgcolor: blueGrey[50],\n            overflow: \"hidden\",\n            borderRadius: 1,\n            display: \"flex\",\n            zIndex: 1,\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          {user.user.created\n            ? nav.map((item) => (\n                <Link to={item.href} style={{ textDecoration: \"none\" }}>\n                  <NavItem\n                    key={item.id}\n                    label={item.label}\n                    selected={item.selected}\n                    onClick={() => handleNavClick(item.id)}\n                  />\n                </Link>\n              ))\n            : null}\n        </Box>\n      </Box>{\" \"}\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minHeight: \"85vh\",\n        }}\n      >\n        <Routes>\n          <Route path=\"/tenzies\" element={<Tenzies />} />\n          <Route path=\"/dogs\" element={<Dogs />} />\n          <Route path=\"/\" element={<User />} />\n        </Routes>\n      </Box>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//wrapper around the basic redux store function\n//automatically adds the redux dev tools extension\n//automatically adds the redux thunk middleware\n//automatically adds the redux saga middleware\nimport userSliceReducer from \"../slices/user/userSlice\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { apiSlice } from \"../slices/dogs/dogsApiSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    user: userSliceReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n  },\n  middleware: (getDefaultMiddleware) => {\n    return getDefaultMiddleware().concat(apiSlice.middleware);\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./reduxStore/store\";\n\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\n\n//\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"light\",\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}